/*
-  Utility classes
-
-  This file defines reusable utility classes.
*/


.disabled {
	opacity: $disabled-opacity;
	cursor: not-allowed;
	color: $disabled-color;

	&:hover,
	&:focus,
	&:active,
	&:focus:hover,
	&:active:hover {
		color: $disabled-color;
		text-decoration: none;
	}
}

a[aria-disabled='true'] {
	display: inline-block;  /* For IE11/ MS Edge bug */
	pointer-events: none;
}

.min-h-100 {
	min-height: 100vh;
}

.width-auto {
	// Utility classes are exemptions for usage of !important
	// stylelint-disable-next-line
	width: auto !important;
}

.img-fluid {
	max-width: 100%;
	height: auto;
}

.text {
	&-md {
		font-size: 1.6rem;
	}

	&-lg {
		font-size: 2rem;
	}

	&-suffix {
		position: relative;
		top: 1px;
	}
}

.control-label-offset,
.control-label-offset.without-label {
	@include control-label-offset;
	// margin-top: -( $input-border-width * 2 );
}

.font-weight {
	// Utility classes are exemptions for usage of !important
	&-semibold {
		// stylelint-disable-next-line
		font-weight: 600 !important;
	}

	&-extra-bold {
		// stylelint-disable-next-line
		font-weight: 800 !important;
	}
}

.number-badge {
	width: $number-badge-size;
	height: $number-badge-size;
	display: inline-flex;
	justify-content: center;
	align-items: center;
	border: 1px solid $info;
	border-radius: $number-badge-size;
	color: $info;
	font-size: 1.2rem;
	line-height: 1;
	vertical-align: text-top;
}

.list-unstyled {
	@include list-unstyled;
}

.gauge {
	width: $gauge-size-mobile;
	height: auto;

	// Media queries
	@include media-breakpoint-up(md) {
		width: $gauge-size;
	}

	&--danger {
		.gauge-gradient__start {
			stop-color: #{$gauge-danger-gradient-start};
		}

		.gauge-gradient__stop {
			stop-color: #{$gauge-danger-gradient-end};
		}
	}

	&--semidanger {
		.gauge-gradient__start {
			stop-color: #{$gauge-semidanger-gradient-start};
		}

		.gauge-gradient__stop {
			stop-color: #{$gauge-semidanger-gradient-end};
		}
	}

	&--warning {
		.gauge-gradient__start {
			stop-color: #{$gauge-warning-gradient-start};
		}

		.gauge-gradient__stop {
			stop-color: #{$gauge-warning-gradient-end};
		}
	}

	&--ok {
		.gauge-gradient__start {
			stop-color: #{$gauge-ok-gradient-start};
		}

		.gauge-gradient__stop {
			stop-color: #{$gauge-ok-gradient-end};
		}
	}

	&--excellent {
		.gauge-gradient__start {
			stop-color: #{$gauge-excellent-gradient-start};
		}

		.gauge-gradient__stop {
			stop-color: #{$gauge-excellent-gradient-end};
		}
	}

	&__bg {
		stroke: $gauge-bar-bg;
	}

	&__bar {
		stroke-dashoffset: -115;
		transition: stroke-dashoffset ( $transition-speed * 3 ) $transition-easing;
	}

	@for $i from 0 through $gauge-steps {
		&__bar--#{$i} {
			stroke-dasharray: 115;
			stroke-dashoffset: (-115 + ( $i * ( 115 / $gauge-steps )));
		}
	}
}


@each $color-name, $color in $theme-colors {
	.color-#{$color-name} {
		/* stylelint-disable-next-line */
		color: $color !important;
	}
}

.border-radius {
	border-radius: $border-radius;
}

.shadow-sm {
	box-shadow: $box-shadow-sm;
}

.shadow {
	box-shadow: $box-shadow;
}

.shadow-lg {
	box-shadow: $box-shadow-lg;
}

.shadow-none {
	box-shadow: none;
}

.hide-empty {
	&:empty {
		/* stylelint-disable-next-line */
		display: none !important;
	}
}

// Custom spacing utility with support for logical operators
// stylelint-disable declaration-no-important
@each $breakpoint in map-keys($grid-breakpoints) {
	@include media-breakpoint-up($breakpoint) {
		$infix: breakpoint-infix($breakpoint, $grid-breakpoints);


		.shadow#{$infix}-sm {
			box-shadow: $box-shadow-sm !important;
		}

		.shadow#{$infix} {
			box-shadow: $box-shadow !important;
		}

		.shadow#{$infix}-lg {
			box-shadow: $box-shadow-lg !important;
		}

		.shadow#{$infix}-none {
			box-shadow: none !important;
		}

		.border-radius#{$infix} {
			border-radius: $border-radius !important;
		}

		.border-radius#{$infix}-none {
			border-radius: 0 !important;
		}

		@each $prop, $abbrev in (margin: m, padding: p) {
			@each $size, $length in $spacers {
				.#{$abbrev}#{$infix}-#{$size} {
					#{$prop}: $length !important;
				}

				.#{$abbrev}t#{$infix}-#{$size},
				.#{$abbrev}y#{$infix}-#{$size} {
					#{$prop}-block-start: $length !important;
				}

				.#{$abbrev}r#{$infix}-#{$size},
				.#{$abbrev}x#{$infix}-#{$size} {
					#{$prop}-inline-end: $length !important;
				}

				.#{$abbrev}b#{$infix}-#{$size},
				.#{$abbrev}y#{$infix}-#{$size} {
					#{$prop}-block-end: $length !important;
				}

				.#{$abbrev}l#{$infix}-#{$size},
				.#{$abbrev}x#{$infix}-#{$size} {
					#{$prop}-inline-start: $length !important;
				}
			}
		}

		// Negative margins (e.g., where `.mb-n1` is negative version of `.mb-1`)
		@each $size, $length in $spacers {
			@if $size != 0 {
				.m#{$infix}-n#{$size} {
					margin: -$length !important;
				}

				.mt#{$infix}-n#{$size},
				.my#{$infix}-n#{$size} {
					margin-block-start: -$length !important;
				}

				.mr#{$infix}-n#{$size},
				.mx#{$infix}-n#{$size} {
					margin-inline-end: -$length !important;
				}

				.mb#{$infix}-n#{$size},
				.my#{$infix}-n#{$size} {
					margin-block-end: -$length !important;
				}

				.ml#{$infix}-n#{$size},
				.mx#{$infix}-n#{$size} {
					margin-inline-start: -$length !important;
				}
			}
		}

		// Some special margin utils
		.m#{$infix}-auto {
			margin: auto !important;
		}

		.mt#{$infix}-auto,
		.my#{$infix}-auto {
			margin-block-start: auto !important;
		}

		.mr#{$infix}-auto,
		.mx#{$infix}-auto {
			margin-inline-end: auto !important;
		}

		.mb#{$infix}-auto,
		.my#{$infix}-auto {
			margin-block-end: auto !important;
		}

		.ml#{$infix}-auto,
		.mx#{$infix}-auto {
			margin-inline-start: auto !important;
		}
	}
}
